import random
import time
import discord
from discord.ext import commands

intents = discord.Intents.default()
intents.message_content = True


bot = commands.Bot(command_prefix=')', intents=intents)


@bot.event
async def on_ready():
    print(f'We have logged in as {bot.user}')

@bot.command()
async def hello(ctx):
    await ctx.send('привет я nerd2 я помогу тебе сделать мир лучше, ты готов?')
    def check(message):
        return message.author == ctx.author and message.channel == ctx.channel
    try:
        response = await bot.wait_for('message', timeout=30, check=check)
        
        mood = response.content.lower()
        if mood == 'да':
            await ctx.send("Отлично! для начала ты можешь сделать пару заданий, чтобы начать введи assignment, за эти задания ты можешь получать баллы, так же ты можешь почитать советы, чтобы почитать советы введи команду advice")
        elif mood == 'нет':
            await ctx.send("Эх, жалко ")
    except asyncio.TimeoutError:
        await ctx.send("я забыл")

@bot.command()
async def advice(ctx):
    a = [
        "1)Повторное использование и вторичная переработка материалов.",
        "2)Использование многоразовых продуктов, таких как стеклянные контейнеры и бутылки.",
        "3)Избегание одноразовых пластиковых продуктов и выбор альтернативных материалов.",
        "4)Компостирование органических отходов, таких как пищевые остатки и фруктовые остатки.",
        "5)Минимизация использования упаковки, покупка весовых продуктов.",
        "6)Энергосбережение и использование энергосберегающих приборов.",
        "7)Обучение себя и близких проблемам отходов и устойчивого потребления."
    ]
    f = random.choice(a)
    await ctx.send(f)
@bot.command()
async def assignment(ctx)
    await ctx.send('за каждое выполненное задание ты будешь почучать баллы, так что когда выполнишь задание напиши всё')
    g = [
        "Изучение мусора: Проведите анализ своего мусора в течение недели. Записывайте, какие виды отходов вы производите больше всего.",
        "Планирование покупок: Перед походом в магазин составьте список покупок и придерживайтесь его. Избегайте покупки продуктов с избыточной упаковкой.",
       "Внедрение многоразовых товаров: Замените одноразовые товары многоразовыми. Например, используйте многоразовые бутылки, контейнеры, пакеты и стаканчики.",
        "Компостирование: Начните компостировать органические отходы. Изучите, какие продукты можно компостировать, и как это сделать правильно.",
        "Отказ от пластика: Избегайте использования пластиковых продуктов. Найдите альтернативы из стекла, металла, бамбука или биоразлагаемых материалов.",
        "Вторичная переработка: Изучите, как и где можно сдавать вторсырье для переработки. Создайте место для сбора бумаги, стекла, пластика и металла.",
        "Использование весовых продуктов: Покупайте продукты весом и используйте свои собственные контейнеры. Избегайте покупки продуктов, упакованных в большие пластиковые упаковки.",
        "Энергосбережение: Изучите свой дом и определите, где можно сэкономить энергию. Рассмотрите варианты использования энергосберегающих приборов и ламп.",
        "Повторное использование упаковки: Повторно используйте упаковку там, где это возможно. Например, использование стеклянных банок для хранения продуктов.",
        "Образование: Примите участие в вебинарах, курсах или мероприятиях по теме устойчивости и уменьшения отходов.",
        "Участие в сообществе: Присоединитесь к местной группе по устойчивости или организации, чтобы обмениваться опытом и получать поддержку.",
        "Постепенные изменения: Начните с внедрения постепенных изменений в свою повседневную жизнь. Например, каждую неделю выбирайте новое действие для уменьшения отходов."
    ]
    d = random.choice(v)
    await ctx.send(v)


bot.run('MTE3ODI3MzM4NjkwOTE1OTQ2NA.GpcY7b.P9du7tsEsQkF24dLJ9-1S-d-xSBQMrq7uuHCcI')
